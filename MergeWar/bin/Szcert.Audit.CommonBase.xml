<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Szcert.Audit.CommonBase</name>
    </assembly>
    <members>
        <member name="T:Szcert.Audit.CommonBase.ChangeValueBase">
            <summary>
            公共方法基类
            </summary>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.ByteSubString(System.String,System.Int32)">
            <summary>
            按字节截取字符串
            </summary>
            <param name="strInput">待截取字符</param>
            <param name="length">字节长度</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.ByteSubString(System.String,System.Int32,System.String)">
            <summary>
            按字节截取字符串并返回自定义的省略部分
            </summary>
            <param name="strInput">待截取字符</param>
            <param name="length">字节长度</param>
            <param name="omit">省略部分用什么代替</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.StrUrlHtml(System.String,System.Int32)">
            <summary>
            对url进行换行并返回包含P标签的Html代码
            </summary>
            <param name="url">url</param>
            <param name="num">字符长度（此处不是字节）</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.StrUrlHtml(System.String,System.Int32,System.String)">
            <summary>
            对url进行换行并返回包含P标签的Html代码
            </summary>
            <param name="url">url</param>
            <param name="num">字符长度（此处不是字节）</param>
            <param name="HtmlLabel">返回包含指定标签的Html代码</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.FormatFileSize(System.Int64)">
            <summary>
            文件大小单位转,以B做为依据
            </summary>
            <param name="fileSize">文件长度</param>
            <returns>文件大小字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.FormatFileSize(System.Int64,System.String)">
            <summary>
            自定义文件单位对大小转换，以B为单位
            </summary>
            <param name="fileSize">文件长度</param>
            <param name="type">转换后单位</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetFileUnitToSize(System.Double)">
            <summary>
            获取文件大小单位,以B做为依据
            </summary>
            <param name="fileSize"></param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefIPvlong(System.Int64)">
            <summary>
            将数值型IP转换为String型
            </summary>
            <param name="ipLong">要转换的IP</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefIPvString(System.String)">
            <summary>
            String类型IP转换为数值型
            </summary>
            <param name="ip">IPv6参数</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefIPv(System.String)">
            <summary>
            副方法，IPv4,数值型转String型
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefInt64Time">
            <summary>
            返回整型时间，默认使用北京时间
            </summary>
            <returns>返回北京时间距离1970-01-01 00:00:00的绝对秒数</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefInt64Time(Szcert.Audit.CommonBase.TimeType)">
            <summary>
            返回整型时间，自选择时区
            </summary>
            <param name="dtt">时区</param>
            <returns>返回选择时区距离1970-01-01 00:00:00的绝对秒数</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefInt64Time(Szcert.Audit.CommonBase.TimeType,Szcert.Audit.CommonBase.TimeUnits)">
            <summary>
            返回整型时间，自选择时区,可自定义要格式化的单位类型
            </summary>
            <param name="dtt">时区</param>
            <param name="dtu">格式化的单位类型</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefInt64Time(Szcert.Audit.CommonBase.TimeType,Szcert.Audit.CommonBase.TimeUnits,System.Boolean)">
            <summary>
            返回整型时间，自选择时区,可自定义要格式化的单位类型和是否相加时差
            </summary>
            <param name="dtt">时区</param>
            <param name="dtu">格式化的单位类型</param>
            <param name="AddEight">是否相差8小时</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefInt64Time(System.Object)">
            <summary>
            传入要处理的时间，返回整型时间
            </summary>
            <param name="tm">要转换的值</param>
            <returns>返回距离1970-01-01 00:00:00的绝对秒数</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefInt64Time(System.Object,Szcert.Audit.CommonBase.TimeUnits)">
            <summary>
            传入要处理的时间，返回整型时间，可自定义要格式化的单位类型
            </summary>
            <param name="tm">要转换的值</param>
            <param name="dtu">格式化的单位类型</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefInt64Time(System.Object,Szcert.Audit.CommonBase.TimeUnits,System.Boolean)">
            <summary>
            传入要处理的时间，返回整型时间，可自定义要格式化的单位类型和是否相加时差
            
            异常：时间转换失败，如果失败返回0
            </summary>
            <param name="tm">要转换的值</param>
            <param name="dtu">格式化的单位类型</param>
            <param name="AddEight">是否相差8小时</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64)">
            <summary>
            将整型时间转换为字符型并具体到秒，默认按绝对秒数处理，如果整型时间为0，则返回空字符
            </summary>
            <param name="time">整型时间</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,System.String)">
            <summary>
            将整型时间转换为字符型并具体到秒，默认按绝对秒数处理，如果整型时间为0，则返回自定义字符
            </summary>
            <param name="time">整型时间</param>
            <param name="NullValue">整型时间为0，则返回自定义字符</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnits)">
            <summary>
            将整型时间转换为字符型并自定义格式化时间具体类型，默认按绝对秒数处理，如果整型时间为0，则返回空字符
            </summary>
            <param name="time">整型时间</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnitsFormat)">
            <summary>
            将整型时间转换为字符型并自定义返回值分隔符，默认按绝对秒数处理，如果整型时间为0，则返回空字符
            </summary>
            <param name="time">整型时间</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnitsFormat,System.String)">
            <summary>
            将整型时间转换为字符型并自定义返回值分隔符，默认按绝对秒数处理，如果整型时间为0，则返回自定义字符
            </summary>
            <param name="time">整型时间</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <param name="NullValue">整型时间为0，则返回自定义字符</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnits,Szcert.Audit.CommonBase.TimeUnitsFormat)">
            <summary>
            将整型时间转换为字符型并自定义返回值分隔符和格式化时间具体类型，默认按绝对秒数处理，如果整型时间为0，则返回空字符
            </summary>
            <param name="time">整型时间</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnits,System.String)">
            <summary>
            将整型时间转换为字符型并自定义格式化时间具体类型，默认按绝对秒数处理，如果整型时间为0，则返回自定义字符
            </summary>
            <param name="time">整型时间</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <param name="NullValue">整型时间为0，则返回自定义字符</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnits,System.Boolean,System.String)">
            <summary>
            将整型时间转换为字符型并自定义格式化时间具体类型，默认按绝对秒数处理，如果整型时间为0，则返回自定义字符
            </summary>
            <param name="time">整型时间</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <param name="AddEight">是否相差8小时</param>
            <param name="NullValue">整型时间为0，则返回自定义字符</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnitsFormat,Szcert.Audit.CommonBase.TimeUnits,System.String)">
            <summary>
            将整型时间转换为字符型并自定义返回值分隔符和格式化时间具体类型，默认按绝对秒数处理，如果整型时间为0，则返回自定义字符
            </summary>
            <param name="time">整型时间</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <param name="NullValue">整型时间为0，则返回自定义字符</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnitsFormat,Szcert.Audit.CommonBase.TimeUnits,System.Boolean,System.String)">
            <summary>
            将整型时间转换为字符型并自定义返回值分隔符和格式化时间具体类型，默认按绝对秒数处理，如果整型时间为0，则返回自定义字符
            </summary>
            <param name="time">整型时间</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <param name="AddEight">是否相差8小时</param>
            <param name="NullValue">整型时间为0，则返回自定义字符</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnits,System.Boolean,Szcert.Audit.CommonBase.TimeUnitsFormat,System.String)">
            <summary>
            将整型时间转换为字符型并自定义格式化时间具体类型，默认按绝对秒数处理，如果整型时间为0，则返回自定义字符
            </summary>
            <param name="time">整型时间</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <param name="AddEight">是否相差8小时</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <param name="NullValue">整型时间为0，则返回自定义字符</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefAuditTime(System.Int64,Szcert.Audit.CommonBase.TimeUnits,System.Boolean,Szcert.Audit.CommonBase.TimeUnits,Szcert.Audit.CommonBase.TimeUnitsFormat,System.String)">
            <summary>
            将长整型时间转换为字符型时间，可自定义要格式化的单位类型、是否相加时差和返回时格式化单位
            </summary>
            <param name="time">整型时间</param>
            <param name="tu">整型时间距离当前时间增加秒还是毫秒，例如：秒</param>
            <param name="AddEight">是否相差8小时</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <param name="NullValue">自定义返回值,如果整型时间小于或等于0，则返回自定义返回值</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.FormatTime(System.DateTime)">
            <summary>
            将DateTime时间进行格式化
            </summary>
            <param name="time">时间</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.FormatTime(System.DateTime,Szcert.Audit.CommonBase.TimeUnits)">
            <summary>
            将DateTime时间进行格式化
            </summary>
            <param name="time">时间</param>
            <param name="tu">返回时的格式化类型，例如：具体到天</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.FormatTime(System.DateTime,Szcert.Audit.CommonBase.TimeUnitsFormat)">
            <summary>
            将DateTime时间进行格式化
            </summary>
            <param name="time">时间</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.FormatTime(System.DateTime,Szcert.Audit.CommonBase.TimeUnits,Szcert.Audit.CommonBase.TimeUnitsFormat)">
            <summary>
            格式化时间
            </summary>
            <param name="time">时间</param>
            <param name="refFormat">返回时的格式化类型，例如：具体到天</param>
            <param name="tuf">格式化日期时日期的分隔形式，例如以-分隔：2017-07-08</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefKeyMd5(System.String)">
            <summary>
            返回MD5-32加密
            </summary>
            <param name="key">代加密字符</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefKeyMd5(System.String,Szcert.Audit.CommonBase.Md5EncryptLen)">
            <summary>
            返回MD5，自定义加密种类
            </summary>
            <param name="key">代加密字符</param>
            <param name="mel">要加密的类型</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.getSHA1Code(System.String)">
            <summary>
            SHA1加密方法
            </summary>
            <param name="str">待加密字符</param>
            <returns>加密后的密文</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.getSHA256Code(System.String)">
            <summary>
            SHA256加密方法
            </summary>
            <param name="str">待加密字符</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.getShaCode(System.String,System.Boolean)">
            <summary>
            SHA加密公共方法
            </summary>
            <param name="str">待加密字符</param>
            <param name="isSHA256">是否进行sha256加密</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetFileMd5(System.String)">
            <summary>
            获取文件的MD5值
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetFileSHA1(System.String)">
            <summary>
            获取文件的SHA1值
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SHA256EnCode(System.String)">
            <summary>
            文件的sha256加密
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Szcert.Audit.CommonBase.ChangeValueBase.RefShaToByte(System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Szcert.Audit.CommonBase.ChangeValueBase.GetFileBytesToString(System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Szcert.Audit.CommonBase.ChangeValueBase.GetFileBytesToString(System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetFileToByte(System.String)">
            <summary>
            将文件转为byte数组
            </summary>
            <param name="FilePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.VerifyFileFull(System.String,System.String)">
            <summary>
            文件真实性验证
            </summary>
            <param name="filePath">文件路径</param>
            <param name="ext">文件后缀名，不包含点</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.FileExtension(System.String)">
            <summary>
            文件对应的编码
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SendRequest(System.String,Szcert.Audit.CommonBase.MethodType)">
            <summary>
            通讯函数，无参请求
            </summary>
            <param name="url">请求Url</param>
            <param name="method">请求方式GET/POST</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SendRequest(System.String,Szcert.Audit.CommonBase.MethodType,Szcert.Audit.CommonBase.EncodType)">
            <summary>
            通讯函数，无参数请求，自定义请求类型和编码的值
            </summary>
            <param name="url">请求Url</param>
            <param name="method">请求方式GET/POST</param>
            <param name="EnType">编码类型</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SendRequest(System.String,Szcert.Audit.CommonBase.MethodType,Szcert.Audit.CommonBase.EncodType,System.String)">
            <summary>
            通讯函数，无参数请求，自定义头部、请求类型、编码和HTTP标头的值
            </summary>
            <param name="url">请求Url</param>
            <param name="method">请求方式GET/POST</param>
            <param name="EnType">编码类型</param>
            <param name="contentType">HTTP标头的值，此类型的值建议使用ContentTypeModel实体类中的变量，如果实体类不足以满足可自定义</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SendRequest(System.String,Szcert.Audit.CommonBase.MethodType,Szcert.Audit.CommonBase.EncodType,System.String,System.String)">
            <summary>
            通讯函数，无参数请求，自定义头部、请求类型、编码和HTTP标头的值
            </summary>
            <param name="url">请求Url</param>
            <param name="method">请求方式GET/POST</param>
            <param name="EnType">编码类型</param>
            <param name="contentType">HTTP标头的值，此类型的值建议使用ContentTypeModel实体类中的变量，如果实体类不足以满足可自定义</param>
            <param name="Header">请求头</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SendRequest(System.String,System.String,Szcert.Audit.CommonBase.MethodType)">
            <summary>
            通讯函数，带参数请求
            </summary>
            <param name="url">请求Url</param>
            <param name="para">请求参数</param>
            <param name="method">请求方式GET/POST</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SendRequest(System.String,System.String,Szcert.Audit.CommonBase.MethodType,Szcert.Audit.CommonBase.EncodType)">
            <summary>
            通讯函数，带参数请求
            </summary>
            <param name="url">请求Url</param>
            <param name="para">请求参数</param>
            <param name="method">请求方式GET/POST</param>
            <param name="EnType">编码类型</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SendRequest(System.String,System.String,Szcert.Audit.CommonBase.MethodType,Szcert.Audit.CommonBase.EncodType,System.String)">
            <summary>
            通讯函数，带参数请求
            </summary>
            <param name="url">请求Url</param>
            <param name="para">请求参数</param>
            <param name="method">请求方式GET/POST</param>
            <param name="EnType">编码类型</param>
            <param name="contentType">HTTP标头的值，此类型的值建议使用ContentTypeModel实体类中的变量，如果实体类不足以满足可自定义</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.SendRequest(System.String,System.String,Szcert.Audit.CommonBase.MethodType,Szcert.Audit.CommonBase.EncodType,System.String,System.String)">
            <summary>
            通讯函数，自定义头部、请求类型、编码和HTTP标头的值
            </summary>
            <param name="url">请求Url</param>
            <param name="para">请求参数</param>
            <param name="method">请求方式GET/POST</param>
            <param name="EnType">编码类型</param>
            <param name="contentType">HTTP标头的值，此类型的值建议使用ContentTypeModel实体类中的变量，如果实体类不足以满足可自定义</param>
            <param name="Header">请求头</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefEncodTypeVal(Szcert.Audit.CommonBase.EncodType)">
            <summary>
            针对编码枚举返回编码
            </summary>
            <param name="enType">编码枚举</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefUintValue(System.String)">
            <summary>
            将包含逗号的字符串使用或运算转换为数值
            </summary>
            <param name="value">要转换的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefUintValue(System.String,System.Char)">
            <summary>
            将包含自定义分隔符的字符串使用或运算转换为数值
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="separ">自定义分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.IsNameMac(System.String)">
            <summary>
            判断MAC地址是否正确
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefSendPwd(System.String)">
            <summary>
            对重要字符部分显示，超过2位才做处理
            </summary>
            <param name="key">待处理字符</param>
            <returns>返回处理后的字符</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefSendPwd(System.String,System.String)">
            <summary>
            对重要字符部分显示
            </summary>
            <param name="key">待处理字符</param>
            <param name="repalce">替换的字符，不能使用双引号</param>
            <returns>返回处理后的字符</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefPercent(System.Int64,System.Int64)">
            <summary>
            对两个数计算百分比，默认保留两位小数
            </summary>
            <param name="A">被除数</param>
            <param name="B">除数</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefPercent(System.Int64,System.Int64,Szcert.Audit.CommonBase.PercentType)">
            <summary>
            对两数计算百分比，自定义小数点后位数
            </summary>
            <param name="A">被除数</param>
            <param name="B">除数</param>
            <param name="pt">百分比格式化枚举</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefTausendstelVal(System.Object)">
            <summary>
            对传进的参数进行千分位
            
            如果异常则返回该参数，如果为0，则返回0
            </summary>
            <param name="val">需要千分位的参数</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetUserIpAddress">
            <summary>
            获取公网IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.UpdateConfig(System.String,System.String)">
            <summary>
            添加或编辑配置的web.config文件中指定的key
            </summary>
            <param name="key">key</param>
            <param name="value">值</param>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.RefReadConfig(System.Collections.Generic.List{System.String})">
            <summary>
            读取web.config中appSettings节点中指定的key的值
            </summary>
            <param name="list">自定义key集合</param>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetConnectTypeList">
            <summary>
            定义接入方式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetConnectTypeValue(System.Int32)">
            <summary>
            将接入方式值转换为接入方式名称
            </summary>
            <param name="value">接入方式值</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetServiceBusinesList">
            <summary>
            网络接入服务运营商
            </summary>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetServiceBusinesValue(System.String)">
            <summary>
            将接入服务运营商值转换为接入服务运营商名称
            </summary>
            <param name="value">接入服务运营商值</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetCertifiCateList">
            <summary>
            证件类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.GetCertifiCateValue(System.String)">
            <summary>
            将证件类型值转换为证件名称
            </summary>
            <param name="value">证件类型值</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.ChangeValueBase.DowenFileType(System.String)">
            <summary>
            根据文件后缀名返回下载类型
            </summary>
            <param name="ext">文件后缀名</param>
            <returns></returns>
        </member>
        <member name="T:Szcert.Audit.CommonBase.TimeType">
            <summary>
            时区枚举
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeType.Utc">
            <summary>
            Utc时间
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeType.BeiJing">
            <summary>
            北京时间
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.TimeUnits">
            <summary>
            时间单位枚举
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnits.Day">
            <summary>
            天
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnits.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnits.Min">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnits.Sec">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnits.Msec">
            <summary>
            毫秒
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.TimeUnitsFormat">
            <summary>
            日期格式化枚举
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnitsFormat.FormatOne">
            <summary>
            以-分割，例如：2017-07-08 23:30:09
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnitsFormat.FormatTwo">
            <summary>
            以/分割，例如：2017/07/08 23:30:09
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnitsFormat.FormatThread">
            <summary>
            以中文分割，例如：2017年07月08日 23时30分09秒
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.TimeUnitsFormat.FormatFour">
            <summary>
            无分隔符，例如：20170708233009
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.PercentType">
            <summary>
            百分比格式化枚举
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.PercentType.FormatZero">
            <summary>
            不保留小数
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.PercentType.FormatOne">
            <summary>
            保留一位小数
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.PercentType.FormatTwo">
            <summary>
            保留两位小数
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.PercentType.FormatThread">
            <summary>
            保留三位小数
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.PercentType.FormatFour">
            <summary>
            保留四位小数
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.Md5EncryptLen">
            <summary>
            Md5加密长度枚举
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.Md5EncryptLen.Len16">
            <summary>
            16位加密
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.Md5EncryptLen.Len32">
            <summary>
            32位加密
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.MethodType">
            <summary>
            请求方式
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.MethodType.Get">
            <summary>
            Get方式
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.MethodType.Post">
            <summary>
            Post方式
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.EncodType">
            <summary>
            编码类型
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.EncodType.UTF8">
            <summary>
            UTF-8编码
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.EncodType.GB2312">
            <summary>
            GB2312编码
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.EncodType.ValNull">
            <summary>
            不传编码
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.ContentTypeModel">
            <summary>
            ContentType标签头实体类
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.ContentTypeModel.x_www_form_urlencoded">
            <summary>
            application/x-www-form-urlencoded
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.ContentTypeModel.json">
            <summary>
            application/json
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.ContentTypeModel.ValNull">
            <summary>
            空值
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.Des3Model">
            <summary>
            DES3加密类
            </summary>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Des3Model.Des3Encode(System.String,System.String,System.String)">
            <summary>
            Des3加密，默认使用CBC模式
            </summary>
            <param name="data">加密前的数据</param>
            <param name="key">密钥(Base64编码的字符串)</param>
            <param name="strIv">向量</param>
            <returns>返回加密后的数据</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Des3Model.Des3Decode(System.String,System.String,System.String)">
            <summary>
            Des3解密，默认使用CBC模式
            </summary>
            <param name="data">已加密的数据</param>
            <param name="key">密钥(Base64编码的字符串)</param>
            <param name="strIv">向量</param>
            <returns>返回解密后的数据</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Des3Model.Des3Encode(System.String,System.String,System.String,Szcert.Audit.CommonBase.Des3Type)">
            <summary>
            Des3加密 ，自选择加密模式
            </summary>
            <param name="data">加密前的数据</param>
            <param name="key">密钥(Base64编码的字符串)</param>
            <param name="strIv">向量</param>
            <param name="des3Type">Des3中的加密类型</param>
            <returns>返回加密后的数据</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Des3Model.Des3Decode(System.String,System.String,System.String,Szcert.Audit.CommonBase.Des3Type)">
            <summary>
            Des3解密 ，自选择加密模式
            </summary>
            <param name="data">已加密的数据</param>
            <param name="key">密钥(Base64编码的字符串)</param>
            <param name="strIv">向量</param>
            <param name="des3Type">Des3中的加密类型</param>
            <returns>返回解密后的数据</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Des3Model.Des3EncodeCBC(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            DES3 CBC模式加密
            </summary>
            <param name="key">密钥</param>
            <param name="iv">IV</param>
            <param name="data">明文的byte数组</param>
            <returns>密文的byte数组</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Des3Model.Des3DecodeCBC(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            DES3 CBC模式解密
            </summary>
            <param name="key">密钥</param>
            <param name="iv">IV</param>
            <param name="data">密文的byte数组</param>
            <returns>明文的byte数组</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Des3Model.Des3EncodeECB(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            DES3 ECB模式加密
            </summary>
            <param name="key">密钥</param>
            <param name="iv">IV(当模式为ECB时，IV无用)</param>
            <param name="data">明文的byte数组</param>
            <returns>密文的byte数组</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Des3Model.Des3DecodeECB(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            DES3 ECB模式解密
            </summary>
            <param name="key">密钥</param>
            <param name="iv">IV(当模式为ECB时，IV无用)</param>
            <param name="data">密文的byte数组</param>
            <returns>明文的byte数组</returns>
        </member>
        <member name="T:Szcert.Audit.CommonBase.Des3Type">
            <summary>
            加密模式
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.Des3Type.CBC">
            <summary>
            CBC模式
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.Des3Type.ECB">
            <summary>
            ECB模式
            </summary>
        </member>
        <member name="T:Szcert.Audit.CommonBase.DataSetConvert">
            <summary>
            DataSet和List互转、DataTable和List互转
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.DataSetConvert._data">
            <summary>
            结果集对象
            </summary>
        </member>
        <member name="F:Szcert.Audit.CommonBase.DataSetConvert._tableIndex">
            <summary>
            结果集对象中Table索引值
            </summary>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.#ctor">
            <summary>
            构造器私有，禁止外部访问无参构造器来创建对象
            </summary>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.#ctor(System.Data.DataSet)">
            <summary>
            初始化操作
            </summary>
            <param name="ds">想转换的结果集</param>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.#ctor(System.Data.DataTable)">
            <summary>
            初始化操作
            </summary>
            <param name="dt">想转换的结果集</param>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.#ctor(System.Data.DataSet,System.Int32)">
            <summary>
            初始化操作
            </summary>
            <param name="ds">想转换的结果集</param>
            <param name="tableindex">结果集Table下标值</param>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.Get_SingleModel``1">
            <summary>
            返回单条Model对象
            </summary>
            <typeparam name="T">model范型</typeparam>
            <returns>model对象</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.Get_SingleModel``1(System.Int32)">
            <summary>
            返回单条Model对象
            </summary>
            <typeparam name="T">model范型</typeparam>
            <param name="tableIndex">结果集Table下标值</param>
            <returns>model对象</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.Get_ListModel``1">
            <summary>
            返回Model集合对象
            </summary>
            <typeparam name="T">model范型</typeparam>
            <returns>Model集合对象</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.Get_ListModelDT``1">
            <summary>
            返回Model集合对象
            </summary>
            <typeparam name="T">model范型</typeparam>
            <returns>Model集合对象</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.Get_ListModel``1(System.Int32)">
            <summary>
            返回Model集合对象
            </summary>
            <typeparam name="T">model范型</typeparam>
            <param name="tableIndex">结果集Table下标值</param>
            <returns>Model集合对象</returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.ToDataTable(System.Collections.IList)">
            <summary>
            将集合类转换成DataTable
            </summary>
            <param name="list">集合</param>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.DataSetConvert.ConvertToModel``1(System.Data.DataTable)">
            <summary>
            将DataTable转List集合
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="dt">DataTable对象</param>
            <returns></returns>
        </member>
        <member name="T:Szcert.Audit.CommonBase.Validator">
            <summary>
            生成验证码实体类
            </summary>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Validator.GenerateCheckCode">
            <summary>
            生成字符型的验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Szcert.Audit.CommonBase.Validator.CreateCheckCodeImage(System.String)">
            <summary>
            根据验证码数字生成Byte数组
            </summary>
            <param name="checkCode">数字验证码</param>
            <returns></returns>
        </member>
    </members>
</doc>
